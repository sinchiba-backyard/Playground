#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp(ql:quickload '() :silent t)

  (ql:quickload "dexador")
  (ql:quickload "quri")
  (ql:quickload "jonathan")
  )

(defpackage :ros.script.post-asagao.3885540014
  (:use :cl))
(in-package :ros.script.post-asagao.3885540014)

(defun main (&rest argv)
  (declare (ignorable argv))

  (let ((out (make-string-output-stream))
        (file "README.md")
        (host "hooks.slack.com")
        (path "/services/TBBQSPXV0/B04PURS5WMS/HAmwF3Cqvc3AKdguPmX4ovh6")
        (username "ロールズさん")
        (channel "#ともに生きるを社会実装")
        (emoji ":rawls:"))
    (with-open-file (in file :direction :input)
      (loop for line = (read-line in nil)
            while line do (format out "~a~%" line)))
    (let ((text (get-output-stream-string out))
          (json-str (jojo:to-json `(:|channel| ,channel :|username| ,username :|text| "text" :|icon_emoji| ,emoji))))
      (print `(:text ,(format nil "~a" (quri:make-uri :scheme "https"
          :host host
          :path path))
          ,(quri:url-encode (jojo:to-json json-str))))

      (print `(:type ,(type-of json-str))) 
      (let ((payload (format nil "{\"channel\": \"~a\", \"username\": \"~a\", \"text\": \"~a\", \"emoji_icon\":\"~a\" }" channel username text emoji)))
        (setf xpayload "{\"channel\": \"#ともに生きるを社会実装\", \"username\": \"ロールズさん\", \"text\": \"Hello :tanomu: Good Bye\", \"emoji_icon\":\":rawls:\" }")
        (print payload)
        (dex:post (format nil "~a" (quri:make-uri :scheme "https" :host host :path path)) :content `(("payload" . ,payload)))
      ))))
;;; vim: set ft=lisp lisp:
